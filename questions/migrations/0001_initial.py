# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-05-13 14:36
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('groups', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('TBLSessions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alternative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Alternative title.', max_length=1000, verbose_name='Title')),
                ('is_correct', models.BooleanField(default=False, help_text='Is correct alternative to answer the question.', verbose_name='Is correct?')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date that the alternative of question is created.', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date that the alternative of question is updated.', verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Alternative',
                'ordering': ['title', 'created_at'],
                'verbose_name_plural': 'Alternatives',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Question title.', max_length=1000, verbose_name='Title')),
                ('level', models.CharField(choices=[('Basic', 'Basic'), ('Intermediary', 'Intermediary'), ('Advanced', 'Advanced')], default='basic', help_text='Difficulty level', max_length=15, verbose_name='Level')),
                ('topic', models.CharField(help_text='Question topic.', max_length=100, verbose_name='Topic')),
                ('is_exercise', models.BooleanField(default=True, help_text='Exercise are questions that appear in the exercise list.', verbose_name='Is it an exercise?')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date that the question is created.', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date that the question is updated.', verbose_name='Updated at')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='TBLSessions.TBLSession')),
            ],
            options={
                'verbose_name': 'Question',
                'ordering': ['title', 'created_at'],
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_alternative', models.CharField(help_text='Correct alternative title.', max_length=1000, verbose_name='Correct Alternative')),
                ('score', models.PositiveIntegerField(default=0, help_text='Question score answered.', verbose_name='Score')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date that the submission of question is created.', verbose_name='Created at')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseSubmission',
            fields=[
                ('submission_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questions.Submission')),
            ],
            options={
                'verbose_name': 'Exercise Submission',
                'ordering': ['user', 'question', 'created_at'],
                'verbose_name_plural': 'Exercise Submissions',
            },
            bases=('questions.submission',),
        ),
        migrations.CreateModel(
            name='GRATSubmission',
            fields=[
                ('submission_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questions.Submission')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='groups.Group', verbose_name='Groups')),
            ],
            options={
                'verbose_name': 'gRAT Submission',
                'ordering': ['group', 'question', 'created_at'],
                'verbose_name_plural': 'gRAT Submissions',
            },
            bases=('questions.submission',),
        ),
        migrations.CreateModel(
            name='IRATSubmission',
            fields=[
                ('submission_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questions.Submission')),
            ],
            options={
                'verbose_name': 'iRAT Submission',
                'ordering': ['user', 'question', 'created_at'],
                'verbose_name_plural': 'iRAT Submissions',
            },
            bases=('questions.submission',),
        ),
        migrations.AddField(
            model_name='submission',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_submissions', to='questions.Question', verbose_name='Questions'),
        ),
        migrations.AddField(
            model_name='submission',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_submissions', to='TBLSessions.TBLSession', verbose_name='TBL sessions'),
        ),
        migrations.AddField(
            model_name='submission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_submissions', to=settings.AUTH_USER_MODEL, verbose_name='Users'),
        ),
        migrations.AddField(
            model_name='alternative',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternatives', to='questions.Question'),
        ),
    ]
